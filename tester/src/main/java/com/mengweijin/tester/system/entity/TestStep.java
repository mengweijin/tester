package com.mengweijin.tester.system.entity;

import com.baomidou.mybatisplus.annotation.TableName;
import com.mengweijin.mwjwork.mybatis.BaseEntity;
import com.mengweijin.tester.cucumber.enums.EStep;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.experimental.Accessors;

/**
 * <p>
 * test step
 * </p>
 *
 * @author Meng Wei Jin
 * @date 2020-04-18 19:33:25
 */
@Data
@Accessors(chain = true)
@EqualsAndHashCode(callSuper = true)
@TableName("AT_TEST_STEP")
public class TestStep extends BaseEntity {

    private static final long serialVersionUID = 1L;

    /**
     * AT_TEST_CASE id
     */
    private Long caseId;

    /**
     * Test case code, Associate TEST STEP ASSERT when excel import
     */
    private String caseCode;
    /**
     * EStep enum. 
     */
    private EStep step;

    /**
     * The execution order of steps, generated by the program.
     */
    private Integer index;

    /**
     * 需要断言的键。可选如下：
     * 1. httpCode: 接口响应的Http状态码；
     * 2. response: 接口响应的响应体；
     * 3. response中的JSON path（多个以英文分号分隔）:
     * 4. 当STEP NAME是ASSERT_DB_DATA时，需要写查询SQL来验证对应的值；'
     */
    private String key;
    /**
     * 需要断言的键。可选如下：
     * 1. httpCode: 如：200；404；403；等；
     * 2. response: 接口响应的原样JSON；
     * 3. response中的JSON path（多个以英文分号分隔）: 请参考示例值；
     * 4. 当STEP NAME是ASSERT_DB_DATA时，需要写查询SQL来验证对应的值：用中括号包裹起来的JSON"
     */
    private String value;

}
